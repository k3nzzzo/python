import random

class CityGrid:
    def __init__(self, rows, columns, obstruction_rate=0.3):
        self.rows = rows
        self.columns = columns
        self.obstruction_rate = obstruction_rate
        self.grid = self._generate_grid()

    def _generate_grid(self):
        grid = []
        for i in range(self.rows):
            row = []
            for j in range(self.columns):
                is_obstructed = random.random() < self.obstruction_rate
                row.append(is_obstructed)
            grid.append(row)
        return grid

    def place_tower(self, row, columns, tower_range):
        if not (0 <= row < self.rows and 0 <= columns < self.columns):
            print("Error")
            return

        for i in range(max(0, row - tower_range), min(self.rows, row + tower_range + 1)):
            for j in range(max(0, columns - tower_range), min(self.columns, columns + tower_range + 1)):
                self.grid[i][j] = True

    def display(self):
        for row in self.grid:
            print(" ".join(["X" if block else "O" for block in row]))

city = CityGrid(5, 5)
city.place_tower(3, 4, 2)
city.display()
